# based on ideas from:
# - https://github.com/audreyr/cookiecutter/blob/master/appveyor.yml
# - http://tjelvarolsson.com/blog/how-to-continuously-test-your-python-code-on-windows-using-appveyor/
# - http://timcera.bitbucket.org/posts/appveyor_finally.html

# validation page for appveyor config: https://ci.appveyor.com/tools/validate-yaml

environment:
  matrix:
    - platform: x86
      PYTHON: "C:\\Python27"
      PYTHON_VERSION: "2.7"

    - platform: x64
      PYTHON: "C:\\Python34"
      PYTHON_VERSION: "3.4"

# until we fix code of example project, lets allow failure here
#matrix:
#  allow_failures:
#    - platform: x86
#      PYTHON: "C:\\Python27"
#      PYTHON_VERSION: "2.7"


init:
  - set PATH=%PYTHON%;%PYTHON%\Scripts;%PATH%
  - "git config --system http.sslcainfo \"C:\\Program Files\\Git\\mingw64\\ssl\\certs\\ca-bundle.crt\""
  - python -V
  - "%PYTHON%/python -c \"import struct;print(8 * struct.calcsize(\'P\'))\""

install:
  - set MINICONDAPATH=C:\Miniconda
  - ps: If ($env:Platform -Match "x64") {$env:MINICONDAPATH="C:\Miniconda-x64"}
  - set PATH=%MINICONDAPATH%\Scripts;%PATH%
  - conda config --set always_yes yes --set changeps1 no
  - conda update -q conda
  - conda create -q --name python%PYTHON_VERSION% python=%PYTHON_VERSION%
  - activate python%PYTHON_VERSION%
  - python -V
  - conda install -q --name python%PYTHON_VERSION% setuptools wheel numpy scipy
  - pip install -r beprof/tests/requirements-test.txt
  - pip install -r requirements.txt

before_test:
  - python -c "import numpy as np;print(np.version.version)"
  - python -c "import scipy as sp;print(sp.version.version)"
  - python %MINICONDAPATH%\envs\python%PYTHON_VERSION%\scripts\versioneer install

build: false

after_test:
  # This step builds your wheels.
  - python setup.py bdist_wheel

test_script:
  - py.test